{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOJoUX+rwxxauWgXkqAMqh9"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"0GlEjyGgTDzE","executionInfo":{"status":"ok","timestamp":1705156801234,"user_tz":-330,"elapsed":1792,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["from google.colab import files\n","\n","uploaded = files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"id":"3LQcbB3UTE7K","executionInfo":{"status":"ok","timestamp":1705157062761,"user_tz":-330,"elapsed":51345,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"6c52c5fb-4c58-42a3-ac1f-fec985f86b38"},"execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-fc7dc833-8f5a-4173-8f36-6b00a61b8540\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-fc7dc833-8f5a-4173-8f36-6b00a61b8540\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving reviseddataset.csv to reviseddataset.csv\n"]}]},{"cell_type":"code","source":["rev_dataset = pd.read_csv('reviseddataset.csv')\n"],"metadata":{"id":"GPn6o7bkTE_K","executionInfo":{"status":"ok","timestamp":1705157075443,"user_tz":-330,"elapsed":1083,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["df =rev_dataset.copy()"],"metadata":{"id":"oda3OID7TFDW","executionInfo":{"status":"ok","timestamp":1705157079902,"user_tz":-330,"elapsed":1089,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":826},"id":"aHe2Hl-CTFHe","executionInfo":{"status":"ok","timestamp":1705157085876,"user_tz":-330,"elapsed":502,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"fe1d3454-d92a-4afc-90a3-8469f113f48a"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  datetime      open      high       low     close  volume  \\\n","0      2023-01-03 05:30:00  1829.455  1832.270  1828.835  1831.430  1402.0   \n","1      2023-01-03 06:00:00  1831.430  1832.105  1830.260  1830.745  1018.0   \n","2      2023-01-03 06:30:00  1830.745  1832.545  1826.840  1828.220  3871.0   \n","3      2023-01-03 07:00:00  1828.220  1830.620  1826.935  1828.570  2654.0   \n","4      2023-01-03 07:30:00  1828.570  1831.085  1828.360  1830.610  1931.0   \n","...                    ...       ...       ...       ...       ...     ...   \n","11592  2023-12-23 01:00:00  2052.530  2054.300  2052.065  2054.055  3440.0   \n","11593  2023-12-23 01:30:00  2054.055  2054.120  2052.250  2053.275  3355.0   \n","11594  2023-12-23 02:00:00  2053.275  2053.550  2052.185  2053.335  2356.0   \n","11595  2023-12-23 02:30:00  2053.335  2053.795  2052.545  2052.665  1285.0   \n","11596  2023-12-23 03:00:00  2052.665  2053.400  2052.540  2053.200  1088.0   \n","\n","          tw     bw   body      rate      deltaup    deltadown        delta  \\\n","0      0.840  0.620  1.975  0.787482  1104.049491   297.950509   806.098981   \n","1      0.675  0.485  0.685  0.500000   509.000000   509.000000     0.000000   \n","2      1.800  1.380  2.525  0.500000  1935.500000  1935.500000     0.000000   \n","3      2.050  1.285  0.350  0.547490  1453.037992  1200.962008   252.075984   \n","4      0.475  0.210  2.040  0.874312  1688.296330   242.703670  1445.592661   \n","...      ...    ...    ...       ...          ...          ...          ...   \n","11592  0.245  0.465  1.525  0.841163  2893.601790   546.398210  2347.203579   \n","11593  0.065  1.025  0.780  0.500000  1677.500000  1677.500000     0.000000   \n","11594  0.215  1.090  0.060  0.521978  1229.780220  1126.219780   103.560440   \n","11595  0.460  0.120  0.670  0.500000   642.500000   642.500000     0.000000   \n","11596  0.200  0.125  0.535  0.811047   882.418605   205.581395   676.837209   \n","\n","           cumdelta  Top Imbalance Size  Bottom Imbalance target  \n","0      2.382203e+03              -5.110              True    Buy  \n","1      2.382203e+03              -3.270              True   Hold  \n","2      2.382203e+03              -2.285              True   Sell  \n","3      2.634279e+03              -3.780              True   Hold  \n","4      4.079872e+03              -4.150              True    Buy  \n","...             ...                 ...               ...    ...  \n","11592  5.832595e+06              -2.520              True   Hold  \n","11593  5.832595e+06              -2.055              True   Hold  \n","11594  5.832698e+06              -1.300              True   Hold  \n","11595  5.832698e+06              -1.610              True   Hold  \n","11596  5.833375e+06              -0.855              True   Hold  \n","\n","[11597 rows x 17 columns]"],"text/html":["\n","  <div id=\"df-f448f07b-abd7-4082-b9d3-fa66f2b08cd3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>datetime</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>tw</th>\n","      <th>bw</th>\n","      <th>body</th>\n","      <th>rate</th>\n","      <th>deltaup</th>\n","      <th>deltadown</th>\n","      <th>delta</th>\n","      <th>cumdelta</th>\n","      <th>Top Imbalance Size</th>\n","      <th>Bottom Imbalance</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-01-03 05:30:00</td>\n","      <td>1829.455</td>\n","      <td>1832.270</td>\n","      <td>1828.835</td>\n","      <td>1831.430</td>\n","      <td>1402.0</td>\n","      <td>0.840</td>\n","      <td>0.620</td>\n","      <td>1.975</td>\n","      <td>0.787482</td>\n","      <td>1104.049491</td>\n","      <td>297.950509</td>\n","      <td>806.098981</td>\n","      <td>2.382203e+03</td>\n","      <td>-5.110</td>\n","      <td>True</td>\n","      <td>Buy</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-01-03 06:00:00</td>\n","      <td>1831.430</td>\n","      <td>1832.105</td>\n","      <td>1830.260</td>\n","      <td>1830.745</td>\n","      <td>1018.0</td>\n","      <td>0.675</td>\n","      <td>0.485</td>\n","      <td>0.685</td>\n","      <td>0.500000</td>\n","      <td>509.000000</td>\n","      <td>509.000000</td>\n","      <td>0.000000</td>\n","      <td>2.382203e+03</td>\n","      <td>-3.270</td>\n","      <td>True</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-01-03 06:30:00</td>\n","      <td>1830.745</td>\n","      <td>1832.545</td>\n","      <td>1826.840</td>\n","      <td>1828.220</td>\n","      <td>3871.0</td>\n","      <td>1.800</td>\n","      <td>1.380</td>\n","      <td>2.525</td>\n","      <td>0.500000</td>\n","      <td>1935.500000</td>\n","      <td>1935.500000</td>\n","      <td>0.000000</td>\n","      <td>2.382203e+03</td>\n","      <td>-2.285</td>\n","      <td>True</td>\n","      <td>Sell</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-01-03 07:00:00</td>\n","      <td>1828.220</td>\n","      <td>1830.620</td>\n","      <td>1826.935</td>\n","      <td>1828.570</td>\n","      <td>2654.0</td>\n","      <td>2.050</td>\n","      <td>1.285</td>\n","      <td>0.350</td>\n","      <td>0.547490</td>\n","      <td>1453.037992</td>\n","      <td>1200.962008</td>\n","      <td>252.075984</td>\n","      <td>2.634279e+03</td>\n","      <td>-3.780</td>\n","      <td>True</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-01-03 07:30:00</td>\n","      <td>1828.570</td>\n","      <td>1831.085</td>\n","      <td>1828.360</td>\n","      <td>1830.610</td>\n","      <td>1931.0</td>\n","      <td>0.475</td>\n","      <td>0.210</td>\n","      <td>2.040</td>\n","      <td>0.874312</td>\n","      <td>1688.296330</td>\n","      <td>242.703670</td>\n","      <td>1445.592661</td>\n","      <td>4.079872e+03</td>\n","      <td>-4.150</td>\n","      <td>True</td>\n","      <td>Buy</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>11592</th>\n","      <td>2023-12-23 01:00:00</td>\n","      <td>2052.530</td>\n","      <td>2054.300</td>\n","      <td>2052.065</td>\n","      <td>2054.055</td>\n","      <td>3440.0</td>\n","      <td>0.245</td>\n","      <td>0.465</td>\n","      <td>1.525</td>\n","      <td>0.841163</td>\n","      <td>2893.601790</td>\n","      <td>546.398210</td>\n","      <td>2347.203579</td>\n","      <td>5.832595e+06</td>\n","      <td>-2.520</td>\n","      <td>True</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>11593</th>\n","      <td>2023-12-23 01:30:00</td>\n","      <td>2054.055</td>\n","      <td>2054.120</td>\n","      <td>2052.250</td>\n","      <td>2053.275</td>\n","      <td>3355.0</td>\n","      <td>0.065</td>\n","      <td>1.025</td>\n","      <td>0.780</td>\n","      <td>0.500000</td>\n","      <td>1677.500000</td>\n","      <td>1677.500000</td>\n","      <td>0.000000</td>\n","      <td>5.832595e+06</td>\n","      <td>-2.055</td>\n","      <td>True</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>11594</th>\n","      <td>2023-12-23 02:00:00</td>\n","      <td>2053.275</td>\n","      <td>2053.550</td>\n","      <td>2052.185</td>\n","      <td>2053.335</td>\n","      <td>2356.0</td>\n","      <td>0.215</td>\n","      <td>1.090</td>\n","      <td>0.060</td>\n","      <td>0.521978</td>\n","      <td>1229.780220</td>\n","      <td>1126.219780</td>\n","      <td>103.560440</td>\n","      <td>5.832698e+06</td>\n","      <td>-1.300</td>\n","      <td>True</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>11595</th>\n","      <td>2023-12-23 02:30:00</td>\n","      <td>2053.335</td>\n","      <td>2053.795</td>\n","      <td>2052.545</td>\n","      <td>2052.665</td>\n","      <td>1285.0</td>\n","      <td>0.460</td>\n","      <td>0.120</td>\n","      <td>0.670</td>\n","      <td>0.500000</td>\n","      <td>642.500000</td>\n","      <td>642.500000</td>\n","      <td>0.000000</td>\n","      <td>5.832698e+06</td>\n","      <td>-1.610</td>\n","      <td>True</td>\n","      <td>Hold</td>\n","    </tr>\n","    <tr>\n","      <th>11596</th>\n","      <td>2023-12-23 03:00:00</td>\n","      <td>2052.665</td>\n","      <td>2053.400</td>\n","      <td>2052.540</td>\n","      <td>2053.200</td>\n","      <td>1088.0</td>\n","      <td>0.200</td>\n","      <td>0.125</td>\n","      <td>0.535</td>\n","      <td>0.811047</td>\n","      <td>882.418605</td>\n","      <td>205.581395</td>\n","      <td>676.837209</td>\n","      <td>5.833375e+06</td>\n","      <td>-0.855</td>\n","      <td>True</td>\n","      <td>Hold</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>11597 rows × 17 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f448f07b-abd7-4082-b9d3-fa66f2b08cd3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f448f07b-abd7-4082-b9d3-fa66f2b08cd3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f448f07b-abd7-4082-b9d3-fa66f2b08cd3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-60aa3800-9284-4a61-8121-b444fe704be3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-60aa3800-9284-4a61-8121-b444fe704be3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-60aa3800-9284-4a61-8121-b444fe704be3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ce690a73-4206-44a7-ba73-7d450623fddb\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ce690a73-4206-44a7-ba73-7d450623fddb button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FxtSJi89TFLQ","executionInfo":{"status":"ok","timestamp":1705157090646,"user_tz":-330,"elapsed":612,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"08eb1ffb-e97c-45d5-a514-5278f196f270"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 11597 entries, 0 to 11596\n","Data columns (total 17 columns):\n"," #   Column              Non-Null Count  Dtype  \n","---  ------              --------------  -----  \n"," 0   datetime            11597 non-null  object \n"," 1   open                11597 non-null  float64\n"," 2   high                11597 non-null  float64\n"," 3   low                 11597 non-null  float64\n"," 4   close               11597 non-null  float64\n"," 5   volume              11597 non-null  float64\n"," 6   tw                  11597 non-null  float64\n"," 7   bw                  11597 non-null  float64\n"," 8   body                11597 non-null  float64\n"," 9   rate                11597 non-null  float64\n"," 10  deltaup             11597 non-null  float64\n"," 11  deltadown           11597 non-null  float64\n"," 12  delta               11597 non-null  float64\n"," 13  cumdelta            11597 non-null  float64\n"," 14  Top Imbalance Size  11597 non-null  float64\n"," 15  Bottom Imbalance    11597 non-null  bool   \n"," 16  target              11597 non-null  object \n","dtypes: bool(1), float64(14), object(2)\n","memory usage: 1.4+ MB\n"]}]},{"cell_type":"code","source":["df['target'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9KxukoVRTFO9","executionInfo":{"status":"ok","timestamp":1705157095285,"user_tz":-330,"elapsed":1294,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"2f470dc7-1a43-4f67-d399-6c9af700045b"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Buy', 'Hold', 'Sell'], dtype=object)"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","\n","le = LabelEncoder()\n","df['target'] = le.fit_transform(df['target'])\n"],"metadata":{"id":"MgNXgXy9Y3Gp","executionInfo":{"status":"ok","timestamp":1705157098563,"user_tz":-330,"elapsed":1016,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df['target'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X2QquRZXY8Yx","executionInfo":{"status":"ok","timestamp":1705157106581,"user_tz":-330,"elapsed":1184,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"ff0ae2de-800b-4e27-ea99-c24893776071"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2])"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["\n","df['Bottom Imbalance'] = df['Bottom Imbalance'].astype(int)\n"],"metadata":{"id":"mvYG4vdMZF1v","executionInfo":{"status":"ok","timestamp":1705157112351,"user_tz":-330,"elapsed":1087,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"igWeFaJkaTxS","executionInfo":{"status":"ok","timestamp":1705157134577,"user_tz":-330,"elapsed":1204,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"63f987b6-7e6b-463f-eae3-517e1f36f6e0"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 11597 entries, 0 to 11596\n","Data columns (total 17 columns):\n"," #   Column              Non-Null Count  Dtype  \n","---  ------              --------------  -----  \n"," 0   datetime            11597 non-null  object \n"," 1   open                11597 non-null  float64\n"," 2   high                11597 non-null  float64\n"," 3   low                 11597 non-null  float64\n"," 4   close               11597 non-null  float64\n"," 5   volume              11597 non-null  float64\n"," 6   tw                  11597 non-null  float64\n"," 7   bw                  11597 non-null  float64\n"," 8   body                11597 non-null  float64\n"," 9   rate                11597 non-null  float64\n"," 10  deltaup             11597 non-null  float64\n"," 11  deltadown           11597 non-null  float64\n"," 12  delta               11597 non-null  float64\n"," 13  cumdelta            11597 non-null  float64\n"," 14  Top Imbalance Size  11597 non-null  float64\n"," 15  Bottom Imbalance    11597 non-null  int64  \n"," 16  target              11597 non-null  int64  \n","dtypes: float64(14), int64(2), object(1)\n","memory usage: 1.5+ MB\n"]}]},{"cell_type":"code","source":["df.drop([\"datetime\"],1,inplace=True)\n","df.dropna(inplace=True)"],"metadata":{"id":"MT6yNBrRaU3A","executionInfo":{"status":"ok","timestamp":1705157138817,"user_tz":-330,"elapsed":1624,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"21933c38-54b9-490a-801e-65708d4bdb09"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-15-a2c375397c2d>:1: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n","  df.drop([\"datetime\"],1,inplace=True)\n"]}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p1KHyZugccxy","executionInfo":{"status":"ok","timestamp":1705157142368,"user_tz":-330,"elapsed":1270,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"dee59d4f-2b3a-4590-ba38-7ef5034e15ce"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 11597 entries, 0 to 11596\n","Data columns (total 16 columns):\n"," #   Column              Non-Null Count  Dtype  \n","---  ------              --------------  -----  \n"," 0   open                11597 non-null  float64\n"," 1   high                11597 non-null  float64\n"," 2   low                 11597 non-null  float64\n"," 3   close               11597 non-null  float64\n"," 4   volume              11597 non-null  float64\n"," 5   tw                  11597 non-null  float64\n"," 6   bw                  11597 non-null  float64\n"," 7   body                11597 non-null  float64\n"," 8   rate                11597 non-null  float64\n"," 9   deltaup             11597 non-null  float64\n"," 10  deltadown           11597 non-null  float64\n"," 11  delta               11597 non-null  float64\n"," 12  cumdelta            11597 non-null  float64\n"," 13  Top Imbalance Size  11597 non-null  float64\n"," 14  Bottom Imbalance    11597 non-null  int64  \n"," 15  target              11597 non-null  int64  \n","dtypes: float64(14), int64(2)\n","memory usage: 1.4 MB\n"]}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":261},"id":"u_xnnF9bcfo_","executionInfo":{"status":"ok","timestamp":1705157147397,"user_tz":-330,"elapsed":969,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"4c8abddb-2113-493b-ec61-8c9343ec7326"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       open      high       low     close  volume     tw     bw   body  \\\n","0  1829.455  1832.270  1828.835  1831.430  1402.0  0.840  0.620  1.975   \n","1  1831.430  1832.105  1830.260  1830.745  1018.0  0.675  0.485  0.685   \n","2  1830.745  1832.545  1826.840  1828.220  3871.0  1.800  1.380  2.525   \n","3  1828.220  1830.620  1826.935  1828.570  2654.0  2.050  1.285  0.350   \n","4  1828.570  1831.085  1828.360  1830.610  1931.0  0.475  0.210  2.040   \n","\n","       rate      deltaup    deltadown        delta     cumdelta  \\\n","0  0.787482  1104.049491   297.950509   806.098981  2382.203095   \n","1  0.500000   509.000000   509.000000     0.000000  2382.203095   \n","2  0.500000  1935.500000  1935.500000     0.000000  2382.203095   \n","3  0.547490  1453.037992  1200.962008   252.075984  2634.279079   \n","4  0.874312  1688.296330   242.703670  1445.592661  4079.871739   \n","\n","   Top Imbalance Size  Bottom Imbalance  target  \n","0              -5.110                 1       0  \n","1              -3.270                 1       1  \n","2              -2.285                 1       2  \n","3              -3.780                 1       1  \n","4              -4.150                 1       0  "],"text/html":["\n","  <div id=\"df-7c80d349-4208-43fb-8b96-6ada71be5893\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>tw</th>\n","      <th>bw</th>\n","      <th>body</th>\n","      <th>rate</th>\n","      <th>deltaup</th>\n","      <th>deltadown</th>\n","      <th>delta</th>\n","      <th>cumdelta</th>\n","      <th>Top Imbalance Size</th>\n","      <th>Bottom Imbalance</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1829.455</td>\n","      <td>1832.270</td>\n","      <td>1828.835</td>\n","      <td>1831.430</td>\n","      <td>1402.0</td>\n","      <td>0.840</td>\n","      <td>0.620</td>\n","      <td>1.975</td>\n","      <td>0.787482</td>\n","      <td>1104.049491</td>\n","      <td>297.950509</td>\n","      <td>806.098981</td>\n","      <td>2382.203095</td>\n","      <td>-5.110</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1831.430</td>\n","      <td>1832.105</td>\n","      <td>1830.260</td>\n","      <td>1830.745</td>\n","      <td>1018.0</td>\n","      <td>0.675</td>\n","      <td>0.485</td>\n","      <td>0.685</td>\n","      <td>0.500000</td>\n","      <td>509.000000</td>\n","      <td>509.000000</td>\n","      <td>0.000000</td>\n","      <td>2382.203095</td>\n","      <td>-3.270</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1830.745</td>\n","      <td>1832.545</td>\n","      <td>1826.840</td>\n","      <td>1828.220</td>\n","      <td>3871.0</td>\n","      <td>1.800</td>\n","      <td>1.380</td>\n","      <td>2.525</td>\n","      <td>0.500000</td>\n","      <td>1935.500000</td>\n","      <td>1935.500000</td>\n","      <td>0.000000</td>\n","      <td>2382.203095</td>\n","      <td>-2.285</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1828.220</td>\n","      <td>1830.620</td>\n","      <td>1826.935</td>\n","      <td>1828.570</td>\n","      <td>2654.0</td>\n","      <td>2.050</td>\n","      <td>1.285</td>\n","      <td>0.350</td>\n","      <td>0.547490</td>\n","      <td>1453.037992</td>\n","      <td>1200.962008</td>\n","      <td>252.075984</td>\n","      <td>2634.279079</td>\n","      <td>-3.780</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1828.570</td>\n","      <td>1831.085</td>\n","      <td>1828.360</td>\n","      <td>1830.610</td>\n","      <td>1931.0</td>\n","      <td>0.475</td>\n","      <td>0.210</td>\n","      <td>2.040</td>\n","      <td>0.874312</td>\n","      <td>1688.296330</td>\n","      <td>242.703670</td>\n","      <td>1445.592661</td>\n","      <td>4079.871739</td>\n","      <td>-4.150</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7c80d349-4208-43fb-8b96-6ada71be5893')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7c80d349-4208-43fb-8b96-6ada71be5893 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7c80d349-4208-43fb-8b96-6ada71be5893');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fc9c546c-3169-4b0c-a2a2-4b7f1dc1f3c6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fc9c546c-3169-4b0c-a2a2-4b7f1dc1f3c6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fc9c546c-3169-4b0c-a2a2-4b7f1dc1f3c6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":[],"metadata":{"id":"pIzgRmD4clbr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(25, 8))\n","sns.boxplot(df)\n","plt.title('Boxplot for the Data frame')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":446},"id":"uaz0KrQRde6q","executionInfo":{"status":"ok","timestamp":1705157170784,"user_tz":-330,"elapsed":767,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"dcba7d93-f8de-4709-f9dc-d2dbc63e8609"},"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2500x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["## Try with the XG boost model"],"metadata":{"id":"i-JOSpOBde_I"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score, classification_report\n","import xgboost as xgb"],"metadata":{"id":"rhp9zMskLoGN","executionInfo":{"status":"ok","timestamp":1705157177577,"user_tz":-330,"elapsed":613,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["X = df.drop('target', axis=1)\n","y = df['target']\n","\n","# Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)"],"metadata":{"id":"oRVnUcVELoLL","executionInfo":{"status":"ok","timestamp":1705157182020,"user_tz":-330,"elapsed":989,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import MinMaxScaler, StandardScaler, RobustScaler,Normalizer\n","\n","def scale_dataframe(df, scaler_type):\n","\n","    if scaler_type == 'minmax':\n","        scaler = MinMaxScaler()\n","    elif scaler_type == 'standard':\n","        scaler = StandardScaler()\n","    elif scaler_type == 'robust':\n","        scaler = RobustScaler()\n","    elif scaler_type == 'Normalizer':\n","        scaler = Normalizer()\n","    else:\n","        raise ValueError(\"Invalid scaler type. Must be one of 'minmax', 'standard', or 'robust'.\")\n","\n","    scaled_data = scaler.fit_transform(df)\n","    scaled_df = pd.DataFrame(scaled_data, columns=df.columns)\n","    return scaled_df\n"],"metadata":{"id":"XclbExHvLoPs","executionInfo":{"status":"ok","timestamp":1705157183523,"user_tz":-330,"elapsed":8,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["# Scale the DataFrame using MinMaxScaler\n","scaled_df = scale_dataframe(df, 'minmax')\n","\n","# Scale the DataFrame using StandardScaler\n","scaled_df = scale_dataframe(df, 'standard')\n","\n","# Scale the DataFrame using RobustScaler\n","scaled_df = scale_dataframe(df, 'robust')"],"metadata":{"id":"Futcg3qdLoT2","executionInfo":{"status":"ok","timestamp":1705157185447,"user_tz":-330,"elapsed":8,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["# Scale the DataFrame using StandardScaler\n","scaled_df_train = scale_dataframe(X_train, 'standard')\n","\n","scaled_df_test = scale_dataframe(X_test, 'standard')\n","\n"],"metadata":{"id":"BPFbpMPwdfDj","executionInfo":{"status":"ok","timestamp":1705157186163,"user_tz":-330,"elapsed":18,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["scaled_df_train"],"metadata":{"id":"ihmQ_Cvketeb","executionInfo":{"status":"ok","timestamp":1705157190589,"user_tz":-330,"elapsed":2211,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"colab":{"base_uri":"https://localhost:8080/","height":478},"outputId":"57c15d2e-8313-4368-aab8-e1b71f4f6538"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          open      high       low     close    volume        tw        bw  \\\n","0    -1.213337 -1.200373 -1.189886 -1.190716 -0.771739  0.050460 -0.865075   \n","1     0.130108  0.119077  0.090407  0.134834  2.235404 -0.189729  3.465030   \n","2    -0.095581 -0.119647 -0.145232 -0.121042  0.614035 -0.752122  2.439780   \n","3     1.724715  1.709881  1.747202  1.728868 -0.606822 -0.201445 -0.412591   \n","4    -0.191213 -0.200697 -0.244802 -0.256675 -0.151180  0.220350  0.051349   \n","...        ...       ...       ...       ...       ...       ...       ...   \n","8692  1.615087  1.594120  1.580904  1.563935  1.046588 -0.330327 -0.051749   \n","8693  0.258341  0.235359  0.268117  0.258399 -0.558289 -0.665420  0.228906   \n","8694  0.399006  0.380104  0.412637  0.404013 -0.759959 -0.705256 -0.005927   \n","8695 -0.217642 -0.207726 -0.198981 -0.208508 -0.617188  0.882333 -0.418318   \n","8696 -0.473933 -0.478298 -0.456747 -0.472122  0.038239  0.378523 -0.355314   \n","\n","          body      rate   deltaup  deltadown     delta  cumdelta  \\\n","0    -0.082010  1.349767 -0.646980  -0.791993 -0.147484 -1.400943   \n","1    -0.626381 -0.570860  1.688131   2.568760 -0.066846  1.101660   \n","2    -0.024154 -0.785798  0.286279   0.967775 -0.489894 -0.289158   \n","3    -0.647420 -0.074736 -0.579997  -0.517433 -0.305384  1.991503   \n","4     1.185559 -0.785798 -0.300206   0.101169 -0.489894 -1.315502   \n","...        ...       ...       ...        ...       ...       ...   \n","8692  0.756900 -0.785798  0.617801   1.457641 -0.489894  1.908419   \n","8693 -0.767865 -0.709200 -0.603907  -0.372176 -0.467783 -0.355118   \n","8694 -0.618492  0.093098 -0.711426  -0.670085 -0.342750 -0.308348   \n","8695 -0.492261 -0.018966 -0.584295  -0.534561 -0.295691 -1.273440   \n","8696 -0.713165 -0.516415 -0.089417   0.218736 -0.315523  0.297125   \n","\n","      Top Imbalance Size  Bottom Imbalance  \n","0              -0.020364               0.0  \n","1              -0.170985               0.0  \n","2               0.837147               0.0  \n","3               0.630043               0.0  \n","4              -1.447837               0.0  \n","...                  ...               ...  \n","8692            0.072062               0.0  \n","8693            0.828589               0.0  \n","8694            0.573561               0.0  \n","8695           -0.621135               0.0  \n","8696            0.496539               0.0  \n","\n","[8697 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-4aa1d5c0-7284-4d56-9fa5-478b0be3c82c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>tw</th>\n","      <th>bw</th>\n","      <th>body</th>\n","      <th>rate</th>\n","      <th>deltaup</th>\n","      <th>deltadown</th>\n","      <th>delta</th>\n","      <th>cumdelta</th>\n","      <th>Top Imbalance Size</th>\n","      <th>Bottom Imbalance</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1.213337</td>\n","      <td>-1.200373</td>\n","      <td>-1.189886</td>\n","      <td>-1.190716</td>\n","      <td>-0.771739</td>\n","      <td>0.050460</td>\n","      <td>-0.865075</td>\n","      <td>-0.082010</td>\n","      <td>1.349767</td>\n","      <td>-0.646980</td>\n","      <td>-0.791993</td>\n","      <td>-0.147484</td>\n","      <td>-1.400943</td>\n","      <td>-0.020364</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.130108</td>\n","      <td>0.119077</td>\n","      <td>0.090407</td>\n","      <td>0.134834</td>\n","      <td>2.235404</td>\n","      <td>-0.189729</td>\n","      <td>3.465030</td>\n","      <td>-0.626381</td>\n","      <td>-0.570860</td>\n","      <td>1.688131</td>\n","      <td>2.568760</td>\n","      <td>-0.066846</td>\n","      <td>1.101660</td>\n","      <td>-0.170985</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-0.095581</td>\n","      <td>-0.119647</td>\n","      <td>-0.145232</td>\n","      <td>-0.121042</td>\n","      <td>0.614035</td>\n","      <td>-0.752122</td>\n","      <td>2.439780</td>\n","      <td>-0.024154</td>\n","      <td>-0.785798</td>\n","      <td>0.286279</td>\n","      <td>0.967775</td>\n","      <td>-0.489894</td>\n","      <td>-0.289158</td>\n","      <td>0.837147</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.724715</td>\n","      <td>1.709881</td>\n","      <td>1.747202</td>\n","      <td>1.728868</td>\n","      <td>-0.606822</td>\n","      <td>-0.201445</td>\n","      <td>-0.412591</td>\n","      <td>-0.647420</td>\n","      <td>-0.074736</td>\n","      <td>-0.579997</td>\n","      <td>-0.517433</td>\n","      <td>-0.305384</td>\n","      <td>1.991503</td>\n","      <td>0.630043</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.191213</td>\n","      <td>-0.200697</td>\n","      <td>-0.244802</td>\n","      <td>-0.256675</td>\n","      <td>-0.151180</td>\n","      <td>0.220350</td>\n","      <td>0.051349</td>\n","      <td>1.185559</td>\n","      <td>-0.785798</td>\n","      <td>-0.300206</td>\n","      <td>0.101169</td>\n","      <td>-0.489894</td>\n","      <td>-1.315502</td>\n","      <td>-1.447837</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>1.615087</td>\n","      <td>1.594120</td>\n","      <td>1.580904</td>\n","      <td>1.563935</td>\n","      <td>1.046588</td>\n","      <td>-0.330327</td>\n","      <td>-0.051749</td>\n","      <td>0.756900</td>\n","      <td>-0.785798</td>\n","      <td>0.617801</td>\n","      <td>1.457641</td>\n","      <td>-0.489894</td>\n","      <td>1.908419</td>\n","      <td>0.072062</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8693</th>\n","      <td>0.258341</td>\n","      <td>0.235359</td>\n","      <td>0.268117</td>\n","      <td>0.258399</td>\n","      <td>-0.558289</td>\n","      <td>-0.665420</td>\n","      <td>0.228906</td>\n","      <td>-0.767865</td>\n","      <td>-0.709200</td>\n","      <td>-0.603907</td>\n","      <td>-0.372176</td>\n","      <td>-0.467783</td>\n","      <td>-0.355118</td>\n","      <td>0.828589</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8694</th>\n","      <td>0.399006</td>\n","      <td>0.380104</td>\n","      <td>0.412637</td>\n","      <td>0.404013</td>\n","      <td>-0.759959</td>\n","      <td>-0.705256</td>\n","      <td>-0.005927</td>\n","      <td>-0.618492</td>\n","      <td>0.093098</td>\n","      <td>-0.711426</td>\n","      <td>-0.670085</td>\n","      <td>-0.342750</td>\n","      <td>-0.308348</td>\n","      <td>0.573561</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8695</th>\n","      <td>-0.217642</td>\n","      <td>-0.207726</td>\n","      <td>-0.198981</td>\n","      <td>-0.208508</td>\n","      <td>-0.617188</td>\n","      <td>0.882333</td>\n","      <td>-0.418318</td>\n","      <td>-0.492261</td>\n","      <td>-0.018966</td>\n","      <td>-0.584295</td>\n","      <td>-0.534561</td>\n","      <td>-0.295691</td>\n","      <td>-1.273440</td>\n","      <td>-0.621135</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8696</th>\n","      <td>-0.473933</td>\n","      <td>-0.478298</td>\n","      <td>-0.456747</td>\n","      <td>-0.472122</td>\n","      <td>0.038239</td>\n","      <td>0.378523</td>\n","      <td>-0.355314</td>\n","      <td>-0.713165</td>\n","      <td>-0.516415</td>\n","      <td>-0.089417</td>\n","      <td>0.218736</td>\n","      <td>-0.315523</td>\n","      <td>0.297125</td>\n","      <td>0.496539</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8697 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4aa1d5c0-7284-4d56-9fa5-478b0be3c82c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4aa1d5c0-7284-4d56-9fa5-478b0be3c82c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4aa1d5c0-7284-4d56-9fa5-478b0be3c82c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-080a5335-935a-4347-8d64-725c4436bff6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-080a5335-935a-4347-8d64-725c4436bff6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-080a5335-935a-4347-8d64-725c4436bff6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_aa43ffad-cedb-442f-85b0-4bc61a2b6ef8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('scaled_df_train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_aa43ffad-cedb-442f-85b0-4bc61a2b6ef8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('scaled_df_train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["scaled_df_train_normal = scale_dataframe(X_train, 'Normalizer')\n","\n","scaled_df_test_normal = scale_dataframe(X_test, 'Normalizer')"],"metadata":{"id":"iBPmqF7JNTDH","executionInfo":{"status":"ok","timestamp":1705157206929,"user_tz":-330,"elapsed":24,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["scaled_df_train_normal"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":652},"id":"NPyyBuOcNTIM","executionInfo":{"status":"ok","timestamp":1705157222164,"user_tz":-330,"elapsed":1236,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"6326b6c0-eb59-472f-c145-309b56b58844"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          open      high       low     close    volume            tw  \\\n","0     0.017655  0.017675  0.017655  0.017667  0.005340  7.358695e-06   \n","1     0.000458  0.000458  0.000457  0.000458  0.001631  1.350134e-07   \n","2     0.000992  0.000992  0.000990  0.000991  0.001798  4.869628e-08   \n","3     0.000356  0.000356  0.000356  0.000356  0.000160  9.850992e-08   \n","4     0.007791  0.007794  0.007772  0.007775  0.007600  3.733554e-06   \n","...        ...       ...       ...       ...       ...           ...   \n","8692  0.000363  0.000363  0.000363  0.000363  0.000791  8.128495e-08   \n","8693  0.001062  0.001062  0.001062  0.001062  0.000553  9.177761e-08   \n","8694  0.001023  0.001024  0.001023  0.001024  0.000308  7.034843e-08   \n","8695  0.006074  0.006080  0.006072  0.006075  0.002815  4.692367e-06   \n","8696  0.000655  0.000655  0.000654  0.000655  0.000782  3.625468e-07   \n","\n","                bw          body          rate   deltaup  deltadown     delta  \\\n","0     0.000000e+00  1.254752e-05  7.690458e-06  0.004353   0.000987  0.003366   \n","1     8.875661e-07  6.926773e-08  1.248511e-07  0.000867   0.000764  0.000103   \n","2     1.478829e-06  7.381331e-07  2.562962e-07  0.000899   0.000899  0.000000   \n","3     6.886977e-08  4.446023e-08  1.054733e-07  0.000097   0.000063  0.000034   \n","4     3.229019e-06  1.509567e-05  2.018137e-06  0.003800   0.003800  0.000000   \n","...            ...           ...           ...       ...        ...       ...   \n","8692  1.268403e-07  5.225461e-07  8.932412e-08  0.000395   0.000395  0.000000   \n","8693  5.186249e-07  1.411963e-08  2.776704e-07  0.000283   0.000270  0.000013   \n","8694  3.908246e-07  1.615408e-07  3.281400e-07  0.000194   0.000114  0.000080   \n","8695  1.228204e-06  1.732082e-06  1.931015e-06  0.001726   0.001089  0.000637   \n","8696  1.522012e-07  4.446328e-08  1.846100e-07  0.000422   0.000360  0.000062   \n","\n","      cumdelta  Top Imbalance Size  Bottom Imbalance  \n","0     0.999346       -2.891590e-05      9.434225e-06  \n","1     0.999998       -8.229945e-07      2.348059e-07  \n","2     0.999996       -2.870518e-07      5.125924e-07  \n","3     1.000000       -2.031222e-07      1.743538e-07  \n","4     0.999836       -2.920244e-05      4.036274e-06  \n","...        ...                 ...               ...  \n","8692  0.999999       -4.993218e-07      1.786482e-07  \n","8693  0.999998       -3.176917e-07      5.430628e-07  \n","8694  0.999998       -6.930623e-07      5.210995e-07  \n","8695  0.999920       -1.517934e-05      3.149240e-06  \n","8696  0.999999       -5.318493e-07      3.420253e-07  \n","\n","[8697 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-9f6099f0-12ee-4430-9ce1-68156f8a5355\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>tw</th>\n","      <th>bw</th>\n","      <th>body</th>\n","      <th>rate</th>\n","      <th>deltaup</th>\n","      <th>deltadown</th>\n","      <th>delta</th>\n","      <th>cumdelta</th>\n","      <th>Top Imbalance Size</th>\n","      <th>Bottom Imbalance</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.017655</td>\n","      <td>0.017675</td>\n","      <td>0.017655</td>\n","      <td>0.017667</td>\n","      <td>0.005340</td>\n","      <td>7.358695e-06</td>\n","      <td>0.000000e+00</td>\n","      <td>1.254752e-05</td>\n","      <td>7.690458e-06</td>\n","      <td>0.004353</td>\n","      <td>0.000987</td>\n","      <td>0.003366</td>\n","      <td>0.999346</td>\n","      <td>-2.891590e-05</td>\n","      <td>9.434225e-06</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.000458</td>\n","      <td>0.000458</td>\n","      <td>0.000457</td>\n","      <td>0.000458</td>\n","      <td>0.001631</td>\n","      <td>1.350134e-07</td>\n","      <td>8.875661e-07</td>\n","      <td>6.926773e-08</td>\n","      <td>1.248511e-07</td>\n","      <td>0.000867</td>\n","      <td>0.000764</td>\n","      <td>0.000103</td>\n","      <td>0.999998</td>\n","      <td>-8.229945e-07</td>\n","      <td>2.348059e-07</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.000992</td>\n","      <td>0.000992</td>\n","      <td>0.000990</td>\n","      <td>0.000991</td>\n","      <td>0.001798</td>\n","      <td>4.869628e-08</td>\n","      <td>1.478829e-06</td>\n","      <td>7.381331e-07</td>\n","      <td>2.562962e-07</td>\n","      <td>0.000899</td>\n","      <td>0.000899</td>\n","      <td>0.000000</td>\n","      <td>0.999996</td>\n","      <td>-2.870518e-07</td>\n","      <td>5.125924e-07</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.000356</td>\n","      <td>0.000356</td>\n","      <td>0.000356</td>\n","      <td>0.000356</td>\n","      <td>0.000160</td>\n","      <td>9.850992e-08</td>\n","      <td>6.886977e-08</td>\n","      <td>4.446023e-08</td>\n","      <td>1.054733e-07</td>\n","      <td>0.000097</td>\n","      <td>0.000063</td>\n","      <td>0.000034</td>\n","      <td>1.000000</td>\n","      <td>-2.031222e-07</td>\n","      <td>1.743538e-07</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.007791</td>\n","      <td>0.007794</td>\n","      <td>0.007772</td>\n","      <td>0.007775</td>\n","      <td>0.007600</td>\n","      <td>3.733554e-06</td>\n","      <td>3.229019e-06</td>\n","      <td>1.509567e-05</td>\n","      <td>2.018137e-06</td>\n","      <td>0.003800</td>\n","      <td>0.003800</td>\n","      <td>0.000000</td>\n","      <td>0.999836</td>\n","      <td>-2.920244e-05</td>\n","      <td>4.036274e-06</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>0.000363</td>\n","      <td>0.000363</td>\n","      <td>0.000363</td>\n","      <td>0.000363</td>\n","      <td>0.000791</td>\n","      <td>8.128495e-08</td>\n","      <td>1.268403e-07</td>\n","      <td>5.225461e-07</td>\n","      <td>8.932412e-08</td>\n","      <td>0.000395</td>\n","      <td>0.000395</td>\n","      <td>0.000000</td>\n","      <td>0.999999</td>\n","      <td>-4.993218e-07</td>\n","      <td>1.786482e-07</td>\n","    </tr>\n","    <tr>\n","      <th>8693</th>\n","      <td>0.001062</td>\n","      <td>0.001062</td>\n","      <td>0.001062</td>\n","      <td>0.001062</td>\n","      <td>0.000553</td>\n","      <td>9.177761e-08</td>\n","      <td>5.186249e-07</td>\n","      <td>1.411963e-08</td>\n","      <td>2.776704e-07</td>\n","      <td>0.000283</td>\n","      <td>0.000270</td>\n","      <td>0.000013</td>\n","      <td>0.999998</td>\n","      <td>-3.176917e-07</td>\n","      <td>5.430628e-07</td>\n","    </tr>\n","    <tr>\n","      <th>8694</th>\n","      <td>0.001023</td>\n","      <td>0.001024</td>\n","      <td>0.001023</td>\n","      <td>0.001024</td>\n","      <td>0.000308</td>\n","      <td>7.034843e-08</td>\n","      <td>3.908246e-07</td>\n","      <td>1.615408e-07</td>\n","      <td>3.281400e-07</td>\n","      <td>0.000194</td>\n","      <td>0.000114</td>\n","      <td>0.000080</td>\n","      <td>0.999998</td>\n","      <td>-6.930623e-07</td>\n","      <td>5.210995e-07</td>\n","    </tr>\n","    <tr>\n","      <th>8695</th>\n","      <td>0.006074</td>\n","      <td>0.006080</td>\n","      <td>0.006072</td>\n","      <td>0.006075</td>\n","      <td>0.002815</td>\n","      <td>4.692367e-06</td>\n","      <td>1.228204e-06</td>\n","      <td>1.732082e-06</td>\n","      <td>1.931015e-06</td>\n","      <td>0.001726</td>\n","      <td>0.001089</td>\n","      <td>0.000637</td>\n","      <td>0.999920</td>\n","      <td>-1.517934e-05</td>\n","      <td>3.149240e-06</td>\n","    </tr>\n","    <tr>\n","      <th>8696</th>\n","      <td>0.000655</td>\n","      <td>0.000655</td>\n","      <td>0.000654</td>\n","      <td>0.000655</td>\n","      <td>0.000782</td>\n","      <td>3.625468e-07</td>\n","      <td>1.522012e-07</td>\n","      <td>4.446328e-08</td>\n","      <td>1.846100e-07</td>\n","      <td>0.000422</td>\n","      <td>0.000360</td>\n","      <td>0.000062</td>\n","      <td>0.999999</td>\n","      <td>-5.318493e-07</td>\n","      <td>3.420253e-07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8697 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f6099f0-12ee-4430-9ce1-68156f8a5355')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9f6099f0-12ee-4430-9ce1-68156f8a5355 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9f6099f0-12ee-4430-9ce1-68156f8a5355');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b04d325c-b226-4cc4-903d-f4b3a23d1e05\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b04d325c-b226-4cc4-903d-f4b3a23d1e05')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b04d325c-b226-4cc4-903d-f4b3a23d1e05 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_721f1dfe-e110-4d45-802f-0dd4435a138e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('scaled_df_train_normal')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_721f1dfe-e110-4d45-802f-0dd4435a138e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('scaled_df_train_normal');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["scaled_df_robust_train = scale_dataframe(X_train, 'robust')\n","scaled_df_robust_test = scale_dataframe(X_test, 'robust')"],"metadata":{"id":"7rcT4_P5NTMo","executionInfo":{"status":"ok","timestamp":1705157250526,"user_tz":-330,"elapsed":4444,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["scaled_df_robust_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"eWUeem1aNTRD","executionInfo":{"status":"ok","timestamp":1705157261354,"user_tz":-330,"elapsed":40,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"1ba924e1-e31b-444c-d1ed-6f275e904219"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          open      high       low     close    volume        tw        bw  \\\n","0    -1.040348 -1.023689 -1.023086 -1.022482 -0.549171  0.377483 -0.643312   \n","1     0.063201  0.057978  0.027375  0.065663  2.976796  0.105960  4.171975   \n","2    -0.122188 -0.137725 -0.165964 -0.144387  1.075691 -0.529801  3.031847   \n","3     1.373063  1.362097  1.386749  1.374206 -0.355801  0.092715 -0.140127   \n","4    -0.200743 -0.204169 -0.247659 -0.255728  0.178453  0.569536  0.375796   \n","...        ...       ...       ...       ...       ...       ...       ...   \n","8692  1.283011  1.267198  1.250304  1.238812  1.582873 -0.052980  0.261146   \n","8693  0.168535  0.153304  0.173183  0.167097 -0.298895 -0.431788  0.573248   \n","8694  0.284082  0.271964  0.291759  0.286632 -0.535359 -0.476821  0.312102   \n","8695 -0.222452 -0.209931 -0.210064 -0.216187 -0.367956  1.317881 -0.146497   \n","8696 -0.432979 -0.431742 -0.421557 -0.432589  0.400552  0.748344 -0.076433   \n","\n","          body      rate   deltaup  deltadown     delta  cumdelta  \\\n","0     0.250859  1.343782 -0.418195  -0.573279  0.562790 -0.707135   \n","1    -0.460481  0.104893  2.442741   3.491876  0.701690  0.810540   \n","2     0.326460 -0.033752  0.725217   1.555330 -0.027015 -0.032905   \n","3    -0.487973  0.424915 -0.336128  -0.241171  0.290806  1.350176   \n","4     1.907216 -0.033752  0.006667   0.507087 -0.027015 -0.655320   \n","...        ...       ...       ...        ...       ...       ...   \n","8692  1.347079 -0.033752  1.131393   2.147871 -0.027015  1.299790   \n","8693 -0.645361  0.015658 -0.365423  -0.065469  0.011072 -0.072906   \n","8694 -0.450172  0.533175 -0.497153  -0.425819  0.226442 -0.044543   \n","8695 -0.285223  0.460889 -0.341394  -0.261890  0.307501 -0.629812   \n","8696 -0.573883  0.140012  0.264921   0.649296  0.273340  0.322640   \n","\n","      Top Imbalance Size  Bottom Imbalance  \n","0              -0.332653               0.0  \n","1              -0.512245               0.0  \n","2               0.689796               0.0  \n","3               0.442857               0.0  \n","4              -2.034694               0.0  \n","...                  ...               ...  \n","8692           -0.222449               0.0  \n","8693            0.679592               0.0  \n","8694            0.375510               0.0  \n","8695           -1.048980               0.0  \n","8696            0.283673               0.0  \n","\n","[8697 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-7abddc61-0a2c-4352-89ae-502243ed8c92\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>tw</th>\n","      <th>bw</th>\n","      <th>body</th>\n","      <th>rate</th>\n","      <th>deltaup</th>\n","      <th>deltadown</th>\n","      <th>delta</th>\n","      <th>cumdelta</th>\n","      <th>Top Imbalance Size</th>\n","      <th>Bottom Imbalance</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-1.040348</td>\n","      <td>-1.023689</td>\n","      <td>-1.023086</td>\n","      <td>-1.022482</td>\n","      <td>-0.549171</td>\n","      <td>0.377483</td>\n","      <td>-0.643312</td>\n","      <td>0.250859</td>\n","      <td>1.343782</td>\n","      <td>-0.418195</td>\n","      <td>-0.573279</td>\n","      <td>0.562790</td>\n","      <td>-0.707135</td>\n","      <td>-0.332653</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.063201</td>\n","      <td>0.057978</td>\n","      <td>0.027375</td>\n","      <td>0.065663</td>\n","      <td>2.976796</td>\n","      <td>0.105960</td>\n","      <td>4.171975</td>\n","      <td>-0.460481</td>\n","      <td>0.104893</td>\n","      <td>2.442741</td>\n","      <td>3.491876</td>\n","      <td>0.701690</td>\n","      <td>0.810540</td>\n","      <td>-0.512245</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-0.122188</td>\n","      <td>-0.137725</td>\n","      <td>-0.165964</td>\n","      <td>-0.144387</td>\n","      <td>1.075691</td>\n","      <td>-0.529801</td>\n","      <td>3.031847</td>\n","      <td>0.326460</td>\n","      <td>-0.033752</td>\n","      <td>0.725217</td>\n","      <td>1.555330</td>\n","      <td>-0.027015</td>\n","      <td>-0.032905</td>\n","      <td>0.689796</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.373063</td>\n","      <td>1.362097</td>\n","      <td>1.386749</td>\n","      <td>1.374206</td>\n","      <td>-0.355801</td>\n","      <td>0.092715</td>\n","      <td>-0.140127</td>\n","      <td>-0.487973</td>\n","      <td>0.424915</td>\n","      <td>-0.336128</td>\n","      <td>-0.241171</td>\n","      <td>0.290806</td>\n","      <td>1.350176</td>\n","      <td>0.442857</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.200743</td>\n","      <td>-0.204169</td>\n","      <td>-0.247659</td>\n","      <td>-0.255728</td>\n","      <td>0.178453</td>\n","      <td>0.569536</td>\n","      <td>0.375796</td>\n","      <td>1.907216</td>\n","      <td>-0.033752</td>\n","      <td>0.006667</td>\n","      <td>0.507087</td>\n","      <td>-0.027015</td>\n","      <td>-0.655320</td>\n","      <td>-2.034694</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>1.283011</td>\n","      <td>1.267198</td>\n","      <td>1.250304</td>\n","      <td>1.238812</td>\n","      <td>1.582873</td>\n","      <td>-0.052980</td>\n","      <td>0.261146</td>\n","      <td>1.347079</td>\n","      <td>-0.033752</td>\n","      <td>1.131393</td>\n","      <td>2.147871</td>\n","      <td>-0.027015</td>\n","      <td>1.299790</td>\n","      <td>-0.222449</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8693</th>\n","      <td>0.168535</td>\n","      <td>0.153304</td>\n","      <td>0.173183</td>\n","      <td>0.167097</td>\n","      <td>-0.298895</td>\n","      <td>-0.431788</td>\n","      <td>0.573248</td>\n","      <td>-0.645361</td>\n","      <td>0.015658</td>\n","      <td>-0.365423</td>\n","      <td>-0.065469</td>\n","      <td>0.011072</td>\n","      <td>-0.072906</td>\n","      <td>0.679592</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8694</th>\n","      <td>0.284082</td>\n","      <td>0.271964</td>\n","      <td>0.291759</td>\n","      <td>0.286632</td>\n","      <td>-0.535359</td>\n","      <td>-0.476821</td>\n","      <td>0.312102</td>\n","      <td>-0.450172</td>\n","      <td>0.533175</td>\n","      <td>-0.497153</td>\n","      <td>-0.425819</td>\n","      <td>0.226442</td>\n","      <td>-0.044543</td>\n","      <td>0.375510</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8695</th>\n","      <td>-0.222452</td>\n","      <td>-0.209931</td>\n","      <td>-0.210064</td>\n","      <td>-0.216187</td>\n","      <td>-0.367956</td>\n","      <td>1.317881</td>\n","      <td>-0.146497</td>\n","      <td>-0.285223</td>\n","      <td>0.460889</td>\n","      <td>-0.341394</td>\n","      <td>-0.261890</td>\n","      <td>0.307501</td>\n","      <td>-0.629812</td>\n","      <td>-1.048980</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8696</th>\n","      <td>-0.432979</td>\n","      <td>-0.431742</td>\n","      <td>-0.421557</td>\n","      <td>-0.432589</td>\n","      <td>0.400552</td>\n","      <td>0.748344</td>\n","      <td>-0.076433</td>\n","      <td>-0.573883</td>\n","      <td>0.140012</td>\n","      <td>0.264921</td>\n","      <td>0.649296</td>\n","      <td>0.273340</td>\n","      <td>0.322640</td>\n","      <td>0.283673</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8697 rows × 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7abddc61-0a2c-4352-89ae-502243ed8c92')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7abddc61-0a2c-4352-89ae-502243ed8c92 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7abddc61-0a2c-4352-89ae-502243ed8c92');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1366c4c7-b474-4a3b-8970-c077d1d82307\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1366c4c7-b474-4a3b-8970-c077d1d82307')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1366c4c7-b474-4a3b-8970-c077d1d82307 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_04e4dca6-a601-497d-b553-b57c7e3b2894\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('scaled_df_robust_train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_04e4dca6-a601-497d-b553-b57c7e3b2894 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('scaled_df_robust_train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["import xgboost as xgb\n","from sklearn.model_selection import RandomizedSearchCV\n","from scipy.stats import randint, uniform\n","\n","# Define the parameter grid for the random search\n","param_dist = {\n","    'learning_rate': uniform(0.01, 0.1),\n","    'max_depth': randint(3, 10),\n","    'n_estimators': randint(50, 200),\n","    'min_child_weight': randint(1, 10),\n","    'subsample': uniform(0.6, 0.4),\n","    'colsample_bytree': uniform(0.6, 0.4),\n","    'gamma': uniform(0, 1),\n","    'reg_alpha': uniform(0, 1),\n","    'reg_lambda': uniform(0, 1)\n","}\n","\n","# Create an XGBoost classifier object\n","xgb_model = xgb.XGBClassifier()\n","\n","# Create a RandomizedSearchCV object with 5-fold cross-validation\n","rand_search = RandomizedSearchCV(estimator=xgb_model,\n","                                 param_distributions=param_dist,\n","                                 n_iter=10,\n","                                 cv=5,\n","                                 random_state=42,\n","                                 n_jobs=-1)\n","\n","# Fit the RandomizedSearchCV object to the training data\n","rand_search.fit(scaled_df_train, y_train)\n","\n","# Print the best parameters and the corresponding score\n","print(\"Best parameters:\", rand_search.best_params_)\n","print(\"Best score:\", rand_search.best_score_)\n"],"metadata":{"id":"dnQMQDh4eyqI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1705157286608,"user_tz":-330,"elapsed":17791,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"750c5597-16c2-4a24-ea66-2e297823ff4c"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["Best parameters: {'colsample_bytree': 0.7334834444556088, 'gamma': 0.14286681792194078, 'learning_rate': 0.07508884729488528, 'max_depth': 7, 'min_child_weight': 2, 'n_estimators': 137, 'reg_alpha': 0.8324426408004217, 'reg_lambda': 0.21233911067827616, 'subsample': 0.6727299868828402}\n","Best score: 0.9977004884561744\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"kDYYj0UAco7a","executionInfo":{"status":"ok","timestamp":1705157292550,"user_tz":-330,"elapsed":27,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["## tried with the standard scaler"],"metadata":{"id":"Pl_iW_MrcpRB","executionInfo":{"status":"ok","timestamp":1705157298732,"user_tz":-330,"elapsed":907,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["y_pred_train = rand_search.predict(scaled_df_train)"],"metadata":{"id":"zw7uTW6iNxO6","executionInfo":{"status":"ok","timestamp":1705157312063,"user_tz":-330,"elapsed":446,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["accuracy_score(y_pred_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tlSV-d9FNxqb","executionInfo":{"status":"ok","timestamp":1705157313913,"user_tz":-330,"elapsed":10,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"f97921a7-9e53-4d7a-fd9e-98b62b52e058"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9996550534667127"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["y_pred_test = rand_search.predict(scaled_df_test)"],"metadata":{"id":"ogD-T45JNxu6","executionInfo":{"status":"ok","timestamp":1705157316301,"user_tz":-330,"elapsed":6,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["accuracy_score(y_pred_test,y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RaIP7wpaOEPG","executionInfo":{"status":"ok","timestamp":1705157318608,"user_tz":-330,"elapsed":11,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"64416bea-fec6-44fe-f3a3-9539941e9aa7"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8710344827586207"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":[],"metadata":{"id":"pd9GFR6FcgBc","executionInfo":{"status":"ok","timestamp":1705157325415,"user_tz":-330,"elapsed":6,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["## tried with Normalaizer scaler"],"metadata":{"id":"_H6iW_BIcgIR","executionInfo":{"status":"ok","timestamp":1705157329470,"user_tz":-330,"elapsed":13,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["y_pred_train_1 = rand_search.predict(scaled_df_train_normal)"],"metadata":{"id":"hk4FqkpiOEYV","executionInfo":{"status":"ok","timestamp":1705157329470,"user_tz":-330,"elapsed":12,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["accuracy_score(y_pred_train_1,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PkbRSb2AT5zD","executionInfo":{"status":"ok","timestamp":1705157329471,"user_tz":-330,"elapsed":11,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"11f4a769-c7fc-4104-b948-a56459f2cf49"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7599172128320111"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["y_pred_test_1 = rand_search.predict(scaled_df_test_normal)"],"metadata":{"id":"EDypBsb9dDxH","executionInfo":{"status":"ok","timestamp":1705157349138,"user_tz":-330,"elapsed":595,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["accuracy_score(y_pred_test_1, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3cPU97OIT6JP","executionInfo":{"status":"ok","timestamp":1705157351573,"user_tz":-330,"elapsed":10,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"99519d97-36c4-4453-9e3d-7d97aae2814e"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.77"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":[],"metadata":{"id":"MiE35VFadNF7","executionInfo":{"status":"ok","timestamp":1705157354138,"user_tz":-330,"elapsed":10,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["## tried with Robust scaler"],"metadata":{"id":"IHXz4dR2dNL4","executionInfo":{"status":"ok","timestamp":1705157356735,"user_tz":-330,"elapsed":12,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["y_pred_train_3 = rand_search.predict(scaled_df_robust_train)"],"metadata":{"id":"DkutKvKLWx_Q","executionInfo":{"status":"ok","timestamp":1705157358411,"user_tz":-330,"elapsed":18,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["accuracy_score(y_pred_train_3,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uJajy8lRWyGw","executionInfo":{"status":"ok","timestamp":1705157358412,"user_tz":-330,"elapsed":15,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"c49e6738-efbf-4892-a2a4-33ad1102d72a"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7460043693227549"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["y_pred_test_3 = rand_search.predict(scaled_df_robust_test)"],"metadata":{"id":"Itu_bP46WyNs","executionInfo":{"status":"ok","timestamp":1705157358413,"user_tz":-330,"elapsed":12,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["accuracy_score(y_pred_test_3,y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wk-KKsMPXvKX","executionInfo":{"status":"ok","timestamp":1705157359509,"user_tz":-330,"elapsed":8,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"1f1d1311-098a-4543-c1b9-c11e5b4d7403"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7368965517241379"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":[],"metadata":{"id":"jJJoy_NeWyUN","executionInfo":{"status":"ok","timestamp":1705157363513,"user_tz":-330,"elapsed":812,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["## Try with the SVM"],"metadata":{"id":"jRGv7SSnOW-Z","executionInfo":{"status":"ok","timestamp":1705157364931,"user_tz":-330,"elapsed":7,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["from sklearn import preprocessing, svm"],"metadata":{"id":"ttlTXgsdOXDd","executionInfo":{"status":"ok","timestamp":1705157365729,"user_tz":-330,"elapsed":8,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"6HrPanwLOXlU","executionInfo":{"status":"ok","timestamp":1705157372719,"user_tz":-330,"elapsed":578,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["# Create an SVM classifier with an RBF kernel\n","clf = svm.SVC(kernel='rbf')\n","\n","# # Fit the SVM classifier to the training data\n","clf.fit(scaled_df_train, y_train)\n"],"metadata":{"id":"h3laNEVLOYA3","executionInfo":{"status":"ok","timestamp":1705157424499,"user_tz":-330,"elapsed":996,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"colab":{"base_uri":"https://localhost:8080/","height":75},"outputId":"2fee71ae-bf96-4527-8636-2ea41f492d6c"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["y_pred_train_svm = clf.predict(scaled_df_train)"],"metadata":{"id":"Pw3ZNm-wOlWq","executionInfo":{"status":"ok","timestamp":1705157429920,"user_tz":-330,"elapsed":774,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["accuracy_score(y_pred_train_svm, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VipoulM2OljG","executionInfo":{"status":"ok","timestamp":1705157433863,"user_tz":-330,"elapsed":773,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"01c6d207-8020-4fc9-e225-d9cac53058a7"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9863171208462689"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["y_pred_test_svm = clf.predict(scaled_df_test)"],"metadata":{"id":"F9vOlqYuOl5k","executionInfo":{"status":"ok","timestamp":1705157441435,"user_tz":-330,"elapsed":545,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":54,"outputs":[]},{"cell_type":"code","source":["accuracy_score(y_pred_test_svm, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"19cJoDHJb7Zq","executionInfo":{"status":"ok","timestamp":1705157444228,"user_tz":-330,"elapsed":871,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}},"outputId":"274b411e-6378-442e-ad55-51e93827480a"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.983448275862069"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":[],"metadata":{"id":"rSCUCdiRb7e0","executionInfo":{"status":"ok","timestamp":1705157911971,"user_tz":-330,"elapsed":843,"user":{"displayName":"Kirubanithi Annamalai","userId":"16049126228945013372"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Ghn9DN8ZU-u0"},"execution_count":null,"outputs":[]}]}